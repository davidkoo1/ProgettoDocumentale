@model BLL.DTO.DocumentDTOs.CreateDocumentDto

<div class="modal-body">
    <div class="container">
        <h2 class="text-center mb-4">Add Document</h2>



        @using (Html.BeginForm("Create", "Document", FormMethod.Post, new { enctype = "multipart/form-data", id = "CreateDocumentForm", @class = "needs-validation", novalidate = "novalidate" }))
        {
            <div class="mb-3 row">
                @Html.LabelFor(model => model.File, "Choose File", new { @class = "col-sm-3 form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.File, new { type = "file", @class = "form-control", @style = "max-width: 100% !important; width: 100%;" })
                    @Html.ValidationMessageFor(model => model.File)
                </div>
                <br>
            </div>




            <div class="mb-3 row">
                @Html.LabelFor(model => model.InstitutionId, "*Institution", new { @class = "col-sm-3 form-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.InstitutionId, new SelectList(ViewBag.Institutions, "Value", "Text"), new { @class = "form-control selectpicker", @id = "InstitutionId", @title = "Choose...", data_live_search = "true", @style = "max-width: 100% !important; width: 100%;" })

                    @Html.ValidationMessageFor(model => model.InstitutionId, null, new { @class = "text-danger" })
                </div>
                <br>
            </div>

            <div class="mb-3 row">
                @Html.LabelFor(model => model.MacroId, "*MACRO TYPE", new { @class = "col-sm-3 form-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.MacroId, new SelectList(ViewBag.MacroTypes, "Value", "Text"), new { @class = "form-control selectpicker", @id = "MacroId", @title = "Choose...", @style = "max-width: 100% !important; width: 100%;" })
                    @Html.ValidationMessageFor(model => model.MacroId, null, new { @class = "text-danger" })
                </div>
                <br>
            </div>

            <div class="mb-3 row" id="MicroTypeRow" style="display: none;">
                @Html.LabelFor(model => model.MicroId, "*MICRO TYPE", new { @class = "col-sm-3 form-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.MicroId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control selectpicker", data_live_search = "true", @id = "MicroType", @title = "Choose..." })
                </div>
                <br>
            </div>

            <div class="mb-3 row" id="ProjectRow" style="display: none;">
                @Html.LabelFor(model => model.ProjectId, "*Project", new { @class = "col-sm-3 form-label" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.ProjectId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control selectpicker", data_live_search = "true", @id = "ProjectId", @title = "Choose..." })
                </div>
                <br>
            </div>


            <div class="mb-3 row">
                @Html.LabelFor(model => model.GroupingDate, "*Date of grouping", new { @class = "col-sm-3 form-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.GroupingDate, "{0}", new { @type = "date", @class = "form-control", @style = "max-width: 100% !important; width: 100%;" })
                    @Html.ValidationMessageFor(model => model.GroupingDate, null, new { @class = "text-danger" })
                </div>
                <br>
            </div>

            <div class="mb-3 row">
                <div class="col-md-12">
                    <label for="AdditionalInfo" class="col-md-4 col-form-label">Additional Info</label>
                    <textarea id="AdditionalInfo" rows="3" class="form-control" style="resize: none; max-width: 100% !important; width: 100%;"></textarea>
                </div>
            </div>


        }


    </div>
            </div>
<div class="modal-footer">
    <button type="button" class="btn btn-success" style="width: 100px;" onclick="handleSubmitButton('#CreateDocumentForm', 'DocumentDatatable')">Save</button>
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $('.selectpicker').selectpicker();


        $('#MacroId').change(SetMicroType);
        $('#InstitutionId').change(SetMicroType);
    });

    function SetMicroType() {
        var macroId = $('#MacroId').val();
        var institutionId = $('#InstitutionId').val();
        var projectSelect = $('#ProjectId');


        if (macroId === "") {
            return;
        }

        if (macroId === "2") {
            $('#MicroTypeRow').hide();
        } else {
            $('#MicroTypeRow').show();
        }

        if (macroId !== "3") {
            $('#ProjectRow').hide();
        } else {
            $('#ProjectRow').show();
            if (institutionId === "") {
                projectSelect.empty().append('<option value="">Choose...</option>').prop('disabled', true);
            } else {
                projectSelect.prop('disabled', false);
            }
        }

        if (macroId === "3") {
            $.ajax({
                url: '/Document/GetProjectsByInstitution',
                type: 'POST',
                data: { InstitutionId: institutionId },
                success: function (response) {
                    projectSelect.empty();
                    $.each(response, function (index, item) {
                        projectSelect.append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                    $('.selectpicker').selectpicker('refresh');
                    $('#ProjectRow').show();
                }
            });
        }

        if (macroId !== "2") {
            $.ajax({
                url: '/Document/GetMicroTypes',
                type: 'POST',
                data: { macroId: macroId },
                success: function (response) {
                    var microTypeSelect = $('#MicroType');
                    microTypeSelect.empty();
                    $.each(response, function (index, item) {
                        microTypeSelect.append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                    $('.selectpicker').selectpicker('refresh');
                    $('#MicroTypeRow').show();
                }
            });
        }
    }

</script>
