@model BLL.UserDTOs.UpdateUserDto

@if (TempData["ErrorUser"] != null)
{
    <div class="alert alert-danger">
        <strong>Sorry!</strong> - @TempData["ErrorUser"]
    </div>
}

@using (Html.BeginForm("Edit", "User", new { userId = Model.Id }, FormMethod.Post, new { id = "updateUserForm", @class = "bg-white needs-validation", novalidate = "novalidate" }))
{
    <div class="modal-body">
        @Html.AntiForgeryToken()


        <div class="mb-3 row">
            @Html.LabelFor(model => model.UserName, new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @autocomplete = "username", placeholder = "Enter username", @disabled = "disabled", @style = "max-width: 100% !important; width: 100%;" })
                @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "text-danger" })
            </div>
            <br>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.Name, "*First Name", new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter first name", maxlength = "100", @style = "max-width: 100% !important; width: 100%;" })
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
            </div>
            <br>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.Surname, "*Last Name", new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Surname, new { @class = "form-control", placeholder = "Enter last name", maxlength = "100", @style = "max-width: 100% !important; width: 100%;" })
                @Html.ValidationMessageFor(model => model.Surname, null, new { @class = "text-danger" })
            </div>
            <br>
        </div>


        <div class="mb-3 row">
            @Html.LabelFor(model => model.Patronymic, "Patronymic", new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Patronymic, new { @class = "form-control", placeholder = "Enter patronymic", maxlength = "100", @style = "max-width: 100% !important; width: 100%;" })
                @Html.ValidationMessageFor(model => model.Patronymic, null, new { @class = "text-danger" })
            </div>
            <br>
        </div>

        <div class="mb-3 row">
            @Html.LabelFor(model => model.Email, "*Email", new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Enter email address", type = "email", maxlength = "100", @style = "max-width: 100% !important; width: 100%;" })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row">
            <label class="col-sm-3 form-check-label" for="IsEnabled">Enable</label>
            <div class="col-sm-9">
                <div class="form-check form-switch">
                    @Html.CheckBoxFor(model => model.IsEnabled, new { @class = "form-check-input", id = "IsEnabled" })
                    @Html.ValidationMessageFor(model => model.IsEnabled, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="mb-3 row">
            @Html.LabelFor(model => model.RolesId, "*Roles", new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.ListBoxFor(model => model.RolesId, new MultiSelectList(ViewBag.Roles, "Value", "Text"), new { @class = "form-control selectpicker", data_live_search = "true", @title = "Choose...", @id = "rolesSelect" })
                @Html.ValidationMessageFor(model => model.RolesId, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3 row" id="additionalSelectRow" @*style="display: none;"*@>
            @Html.LabelFor(model => model.IdInstitution, "Institutions", new { @class = "col-sm-3 form-label" })
            <div class="col-sm-9">
                @Html.DropDownListFor(model => model.IdInstitution, new SelectList(ViewBag.Institutions, "Value", "Text"), new { @class = "form-control selectpicker", @id = "AdditionalSelect", @title = "Choose..." })
            </div>
        </div>

    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-success" style="width: 100px;" onclick="handleSubmitButton('#updateUserForm', 'UserDatatable')">Save</button>
        <button type="button" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">Cancel</button>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.selectpicker').selectpicker();

        RoleChangeForInstitution.call($('#rolesSelect'));

        $('#rolesSelect').change(RoleChangeForInstitution);

        function RoleChangeForInstitution() {
            var selectedValues = $(this).val();

            if (!selectedValues.includes("3")) {
                $('#AdditionalSelect').empty();
                $('#additionalSelectRow').hide();
            }
            else {
                $.ajax({
                        url: '../User/PrepareUserInstitution',
                        type: 'POST',
                        data: { userid: '@Model.Id' }, // Assuming you have the user ID available in your model
                        success: function (response) {
                            $('#AdditionalSelect').empty();

                            $.each(response, function (index, item) {
                                $('#AdditionalSelect').append($('<option>', {
                                    value: item.Value,
                                    text: item.Text,
                                    selected: item.Selected
                                }));
                            });

                            $('.selectpicker').selectpicker('refresh');
                            $('#additionalSelectRow').show();
                        },
                        error: function (error) {
                            console.error('AJAX error:', error);
                        }
                    });
            }
        }
    });
</script>
